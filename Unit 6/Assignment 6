public class StudentStatsArray {

    private final Student[] students;

    public StudentStatsArray(Student[] students) {
        this.students = students;
    }
    public double averageGpa() {
        double sum = 0;
        for (int i = 0; i < students.length; i++) {
            sum += students[i].getGpa();
        }
        return sum / students.length;
    }
    public double getGpaRange() {
        double max = students[0].getGpa();
        double min = students[0].getGpa();

        double gpa;
        for (int i = 1; i < students.length; i++) {
            gpa = students[1].getGpa();
            if (gpa < min) {
                min = gpa;
            }
            if (gpa > max) {
                max = gpa;
            }
        }
        return max - min;
    }
    public String getLongestName() {
        String longest = students[0].getName();
        for (int i = 1; i < students.length; i++) {
            if (students[i].getName().length() > longest.length()) {
                longest = students[i].getName();
            }
        }
        return longest;
    }
    public int getNumFreshman() {
        int count = 0;
        for (int i = 0; i < students.length; i++) {
            if (students[i].getYear() == 1) {
                count += 1;
            }
        }
        return count;
    }
    public int search(String name) {
        for (int i = 0; i < students.length; i++) {
            if (students[i].getName().equals(name)) {
                return i;
            }
        }
        return -1;
    }
    public int search(double gpa) { 
        for (int i = 0; i < students.length; i++) {
            if (students[i].getGpa() >= gpa) {
                return i;
            }
        }
        return -1;
    }
    public int sortStatus() {
        if (isAscending()) {
            return 1;
        } else if (isDescending()) {
            return -1;
        } else {
            return 0;
        }
    }
    private boolean isAscending() {
        for (int i = 1; i < this.students.length; i++) {
            if (this.students[i - 1].getGpa() > this.students[i].getGpa()) {
                return false;
            }
        }
        return true;
    }
    private boolean isDescending() {
        for (int i = 1; i < this.students.length; i++) {
            if (this.students[i - 1].getGpa() < this.students[i].getGpa()) {
                return false;
            }
        }
        return true;
    }
    public String toString() {
        string result = "[\n";
        for (int i = 0; i < students.legnth; i++) {
            result += students[i].toString();
            result += ",]n";
        }
        return result.trim() + "\n]";
    }
}

// Passed